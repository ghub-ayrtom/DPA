import numpy as np  # NumPy - библиотека для математических вычислений
import random


f = open('C:\\Users\\Admin\\Desktop\\output.txt', 'w')  # Создаём файл в указанной директории для записи (write)

N = int(input("Кол-во строк матрицы: "))
M = int(input("Кол-во столбцов матрицы: "))

l = int(input("Левая граница диапазона генерации случайных чисел для заполнения матрицы: "))
r = int(input("Правая граница диапазона генерации случайных чисел для заполнения матрицы: "))

A = np.eye(N, M)  # Метод eye создаёт матрицу размером N на M, на главной диагонали которой стоят единицы

f.write("Исходные данные: " + '\n')  # Записываем строку в файл

# Проходим всю матрицу по строкам
for i in range(N):
    for j in range(M):
        # Генерируем случайное целое число в диапазоне от l до r и присваиваем его текущему элементу матрицы
        A[i][j] = random.randint(l, r)
        f.write(str(A[i][j]) + '\t')  # Записываем этот элемент в файл

    f.write('\n')

maxE = l - 1  # По умолчанию присваиваем максимальному числу самое минимальное значение из возможных, чтобы он прошёл хотя бы одну проверку

f.write('\n')

print("Исходная матрица:\n", A)
print()

f.write("Результат обработки: " + '\n')

# Проходим всю матрицу по столбцам
for j in range(M):
    for i in range(N):
        if A[i][j] > maxE:  # Если рассматриваемый элемент матрицы больше текущего максимального
            maxE = A[i][j]  # Перезаписываем максимальный элемент
    else:
        # Как только столбец закончился, начинаем идти по нему снова и делить каждый элемент на найденный максимальный в этом столбце
        for k in range(N):
            A[k][j] = float('{:.3f}'.format(A[k][j] / maxE))

        maxE = l - 1

# Переписываем всю матрицу в файл
for i in range(N):
    for j in range(M):
        f.write(str(A[i][j]) + '\t')

    f.write('\n')

f.close()

print("Обработанная матрица:\n", A)
print()
print("Пожалуйста, проверьте выходной файл")